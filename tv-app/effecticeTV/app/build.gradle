plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    alias libs.plugins.kotlin.kapt
    alias libs.plugins.hilt.plug
}
def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    namespace 'band.effective.office.tv'
    compileSdk 33

    defaultConfig {
        applicationId "band.effective.office.tv"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField ("String", "apiLeaderUrl", localProperties['apiLeaderUrl'])
        buildConfigField ("String", "apiMattermostUrl", localProperties['apiMattermostUrl'])
        buildConfigField ("String", "mattermostBotToken", localProperties['mattermostBotToken'])
        buildConfigField ("String", "apiSynologyUrl", localProperties['synologyIP'])
        buildConfigField ("String", "synologyLogin", localProperties['synologyLogin'])
        buildConfigField ("String", "synologyPassword", localProperties['synologyPassword'])
        buildConfigField ("String", "folderPathPhotoSynology", localProperties['folderPathPhotoSynology'])
        buildConfigField ("String", "uselessFactsApi", localProperties['uselessFactsApi'])
        buildConfigField ("String", "mattermostBotDirectId", localProperties['mattermostBotDirectId'])
        buildConfigField ("String", "duolingoUrl", localProperties['duolingoUrl'])
        buildConfigField("String", "notionToken", localProperties['NOTION_TOKEN'])
        buildConfigField("String", "notionDatabaseId", localProperties['NOTION_DATABASE_ID'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    //for tv
    implementation libs.tv
    implementation libs.tvMaterial

    //Retrofit
    implementation libs.retrofit
    implementation libs.okhttp3
    implementation libs.okhttp3.logging
    implementation libs.retrofit.moshi

    // moshi
    implementation libs.moshi
    implementation libs.moshi.adapter
    kapt libs.moshi.gen

    //hilt di
    implementation libs.hilt
    implementation libs.hilt.nav
    kapt libs.hitl.compiller

    //qr
    implementation libs.zxing

    //navigation
    implementation libs.navigation

    //coil
    implementation libs.coil

    //notion
    implementation libs.notion
}
kapt {
    correctErrorTypes true
}
