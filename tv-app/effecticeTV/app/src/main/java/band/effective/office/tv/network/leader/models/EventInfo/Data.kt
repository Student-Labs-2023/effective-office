package band.effective.office.tv.network.leader.models.EventInfo

import band.effective.office.tv.network.leader.models.*
import com.squareup.moshi.JsonClass

@JsonClass(generateAdapter = true)
data class Data(
    val access: String,
    val address: AddressX,
    val afterQuizId: Any?,
    val certificate: Boolean,
    val certificate_text: Any?,
    val city: String,
    val city_id: Int,
    val createdBy: Int,
    val date_end: String,
    val date_start: String,
    val documents: List<Any?>,
    val ecpRequired: Boolean,
    val expectedParticipantCount: Any?,
    val finished: Boolean,
    val format: String,
    val full_info: String,
    val full_name: String,
    val halls: List<HallX>,
    val hash_tags: List<Any?>,
    val hosts: List<Any?>,
    val id: Int,
    val info: Any?,
    val is_competition: Boolean,
    val live: Any?,
    val live_public: Boolean,
    val media: Any?,
    val moderation: String,
    val needFeedback: Boolean,
    val needStartNotification: Boolean,
    val networkProposals: List<Any?>,
    val network_parent_id: Any?,
    val networking: Any?,
    val organizers: List<Organizer>,
    val participation_format: String,
    val partners: List<Any?>,
    val photo: String,
    val photo_180: String,
    val photo_360: String,
    val photo_520: String,
    val place: Any?,
    val quizId: Any?,
    val registration_date_end: String,
    val registration_date_start: String,
    val schedules: List<Any?>,
    val similar: List<Similar>,
    val space: SpaceX,
    val speakers: List<Speaker>,
    val stat: StatX,
    val status: String,
    val team_size_max: Any?,
    val team_size_min: Any?,
    val team_type: Any?,
    val themes: List<ThemeX>,
    val timezone: TimezoneX,
    val type: TypeX
)